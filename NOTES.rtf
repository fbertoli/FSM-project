{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11940\viewh7800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 NOTES
\b0\fs24 \
GUROBI BUG\
create the linear and dual code with test_data.txt,\
optimize, the objective are the same, but the values of the duals variables obtained by the primal are wrong, i.e. they don\'92t respect the constraints of the dual.\
Although if you solve the dual, and get the dual var of the consort, that would be the primal variables f,d, they are correct in the sense that they respect the consort of the primal. Moreover the values are the same of the primal (there is a small epsilon difference)\
====> solve the dual\
\
INDIGO\
- For the reasons explained above in Questions we need to recalculate the costs obtained from Inigo output file.\
- File creation could be slow. Time it\
- The heuristic sometimes find already existing column with a better routing cost.\
- The fact that if you run the nodeSolver with the data obtained from a previous run and \
  you can still improve the solution is due to the fact that the heuristic find better solution not seen before.\
  To see this I printed out the result from the optimality check and the details of the new negative reduced cost   f\
  found in the new run, it turns out that the negativity comes from a better routing costs (maybe adding some    \
  zero-cost vehicles) \
- It could be good to run again the solver after the completion of the first run. Maybe we are stuck in a non optimal  \
  solution and the fact that the heuristics performs betters leads to a supersmall improvement that might lead it  \
  turns to a big improvement that we could not see.\
\
\

\b\fs28 TO DO\

\b0\fs24 - create a file specifics.py and import it (as specs) and save there the technical variables. Fixed costs, distances  \
  etc\'85so that we have it ready and we just call it everywhere with e.g. specs.fixed_costs\
- parallelize file creation (I think it\'92s enough to put the setNewCosts function inside the worker, as it is done in \
  checkOptimality\
- modify the seed file to be the previous one or the closest one (in terms of fixed costs)\
- Tune the parameters\
- If an already existing column is found again with a better cost replace it. Right now I\'92m not adding it.\
\

\b\fs28 PROBLEMS
\b0\fs24 \
I can\'92t get to work the inclusion @base1.vrx in INDIGO\

\b\fs28 \
QUESTIONS
\b0\fs24 \
INDIGO\
in routes, the last field = max_duration is a zero. Does hat mean no max_duration or is it wrong?\
\
checking the -o file I found that INDIGO doesn\'92t pick the smartest vehicle. Sometime instead o using a vehicle already used for the morning and available (eg 4-0) it uses a different one (eg.4-1) for the afternoon. Therefore the fixed costs are higher.\
Moreover it includes the filed PENALTIES. What is that?}